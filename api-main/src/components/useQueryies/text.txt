useQueries() --- multiple api

1.This function takes a post id and uses Axios to fetch data from http://localhost:3001/posts/:id

const fetchPost = async (id: Number) => {
  const res = await axios.get(`http://localhost:3001/posts/${id}`);
  return res.data;
};

2 Takes postIds as a prop. This is an array of post IDs (e.g., [1, 2, 3, 4]).
const MultiplePost = ({ postIds }: any) => {
    3 useQueries accepts an array of query configs.
  const postQueries = useQueries({
    queries: postIds.map((id: Number) => ({
      queryKey: ["posts", id],
      queryFn: () => fetchPost(id),
    })),
  });

  const isLoading = postQueries.some((query) => query.isLoading);
  
  if (isLoading) return <div>Loading...</div>;

  return (
    <div>
      {postQueries.map((query: any) => (
        <ul key={query.data.id} className="p-4 bg-teal-50">
          <li>
            {query.data.id} - {query.data.title}
          </li>
          <li>{query.data.body}</li>
        </ul>
      ))}
    </div>
  );
};

function UseQueries() {
  const postIds = [1, 2, 3, 4];

  return (
    <div className="p-5 container mx-auto">
      <h1 className="text-2xl font-medium mb-4">Infinite Scroll by Button</h1>
      <MultiplePost postIds={postIds} />
    </div>
  );
}
